#include <stdio.h>
#include <stdlib.h>

typedef struct {
	int a, b = 1;
} Value;

int gcd_t(int a, int b) {
	return b == 0 ? a : gcd_t(b, a % b);
}

int gcd(int a, int b) {
	return gcd_t(abs(a), abs(b));
}

void Change_Line(Value ** Marix, Value * temp, int x, int y, int M);
int Check_c(Value ** Marix, int x, int N);
void update(Value ** Marix, int x, int y, int start, int M);

int main(int argc, char * argv[]) {
	int N, M;
	printf("请输入矩阵大小\n"); 
	scanf("%d %d", &N, &M);
	Value * sour = new Value[N * M];
	Value ** Marix = new Value * [N];
	for (int i = 0; i < N; ++i) {
		Marix[i] = sour + i * M;
	}
	printf("请输入仅包含整数的矩阵\n"); 
	for (int i = 0; i < N; ++i) {
		for (int j = 0; j < M; ++j) {
			scanf("%d", &Marix[i][j].a);
		}
	}
	Value * temp = new Value[M];
	for (int i = 0; i < M; ++i) {
		int row = Check_c(Marix, i, N);
		if (row < N) {
			if (row != i) Change_Line(Marix, temp, row, i, M);
			for (int j = i + 1; j < N; ++j) {
				update(Marix, i, j, i, M);
			}
		}
	}
	for (int i = 0; i < N; ++i) {
		for (int j = 0; j < M; ++j) {
			printf("%-10.2f", Marix[i][j].a * 1. / Marix[i][j].b);
		}
		printf("\n");
	}
	double sum = 1;
	if (N == M) {
		for (int i = 0; i < N; ++i) {
			sum *= Marix[i][i].a * 1. / Marix[i][i].b;
		}
		printf("行列式为：%.2f", sum);
	} 
	return 0;
}

void Change_Line(Value ** Marix, Value * temp, int x, int y, int M) {
	for (int i = 0; i < M; ++i) {
		temp[i] = Marix[x][i];
		Marix[x][i] = Marix[y][i];
		Marix[y][i] = temp[i];
	}
}

int Check_c(Value ** Marix, int x, int N) {
	int i;
	for (i = x; i < N; ++i) {
		if (Marix[i][x].a) break;
	}
	return i;
}

void update(Value ** Marix, int x, int y, int start, int M) {
	if (!Marix[y][start].a) return;
	Value temp;
	temp.a = Marix[y][start].a * Marix[x][start].b;
	temp.b = Marix[y][start].b * Marix[x][start].a;
	int gg = gcd(temp.a, temp.b);
	temp.a /= gg;
	temp.b /= gg;
	for (int i = start + 1; i < M; ++i) {
		int ss = Marix[y][i].b;
		Marix[y][i].b *= temp.b * Marix[x][i].b;
		Marix[y][i].a *= temp.b * Marix[x][i].b;
		Marix[y][i].a -= Marix[x][i].a * ss * temp.a;
		int gg = gcd(Marix[y][i].a, Marix[y][i].b);
		Marix[y][i].a /= gg;
		Marix[y][i].b /= gg;
	}
	Marix[y][start].a = 0; Marix[y][start].b = 1;
}
